<%= form_for(@work_order, html: { class: 'form-inline' }) do |f| %>
  <%= f.hidden_field :id, value: @work_order.id %>
  <div class='row-fluid'> 

    <div class="span3">
      <label for="client">
        <%= t :client, scope: [:activerecord, :models, :work_order] %>

      </label>
      <%= f.hidden_field :client_id, value: @work_order.client.id %>
      <input type="text" class="" value="<%= @work_order.client.local_name %>" readonly></input>
    </div>

    <div class="span3">
      <label for="owner">
        <%= t :owner, scope: [:activerecord, :models, :work_order] %>
      </label>
      <%= collection_select(:work_order, :owner_id, User.all, :id, :name) %>
    </div>

    <div class="span3">

      <label for="author">
        <%= t :author, scope: [:activerecord, :models, :work_order] %>
      </label>
      <%= collection_select(:work_order, :author_id, User.all, :id, :name, html: { disabled: :disabled }) %>
    </div>


    <div class="span3">
      <div class="pull-right">
        <label for="created">
          <%= t :created, scope: [:activerecord, :models, :work_order] %>
        </label>
        <input type="text" class="" value="<%= @work_order.created_at || Time.now.strftime('%Y-%m-%d %H:%M') %>" readonly></input>
      </div>

    </div>
  </div>
  <!--
  <div class="span2">
    <label for="updated">
      <%= t :updated, scope: [:activerecord, :models, :work_order] %>
    </label>
    <input type="text" class="input-medium" value="<%= @work_order.updated_at || Time.now.strftime('%Y-%m-%d %H:%M') %>" readonly></input>
  </div> 
  -->
  <br>

  <div class="row-fluid">
    <div class="span7">
      <ul class="nav nav-tabs" style="margin-bottom: 0px">
        <li class="active"><a href="#work_order_products" data-toggle="tab">Products</a></li>
        <li><a href="#work_order_change_log" data-toggle="tab">Change Log</a></li>
      </ul>
      <div class="tab-content">
        <div id="work_order_products" class="tab-pane active">
          <div class="btn-toolbar">
            <div class="btn-group">
              <%= link_to 'add', new_work_order_product_path(work_order_id: @work_order.id), remote: true, class: 'btn add-work-order-product' %>
              <%= link_to 'peruse', work_order_products_path(work_order_id: @work_order.id), class: 'btn', target: '_blank' %>
            </div>
          </div>
          <ul id="work_order_products">
            <% @work_order.work_order_products.each do |product| %>
              <%= render 'work_order_products/li', work_order_product: product %>
            <% end %>
          </ul>
        </div>
        <div id="work_order_change_log" class="tab-pane">
          <div class="btn-toolbar">
            <div class="btn-group">
              <%= link_to 'add', new_comment_path(commentable_id: @work_order.id, type: @work_order.class), remote: true, class: 'btn add-comment' %>
              <%= link_to 'peruse', comments_path(commentable_id: @work_order.id, type: @work_order.class), class: 'btn', target: '_blank' %>
            </div>
          </div>
          <ul id="work_order_comments">
            <% @work_order.comments.each do |comment| %>
              <%= render 'comments/li', comment: comment %>
            <% end %>
          </ul>
        </div>
      </div>
    </div> 

    <div class="span5"> 

      <ul class="nav nav-tabs">
        <li class="active"><a href="#client_memo" data-toggle="tab">Client Memo</a></li>
        <li><a href="#payment_info" data-toggle="tab">Payment</a></li>
        <li><a href="#sr_memo" data-toggle="tab">Memo</a></li>
      </ul>

      <div class="tab-content">
        <div class="tab-pane active" id="client_memo">
          <textarea class="span12" rows="6" id="client_memo" readonly><%= @work_order.client ? @work_order.client.memo : '' %></textarea>
        </div>
        <div class="tab-pane" id="payment_info">

          <!-- NOTE this logic is actually wrong - the user should not be able to edit payment options once the SR has been invoiced.
          With the exception of setting Paid On - the data can still show - but needs to update the form elements dynamically based on state - so we will be re-writing that 
          lovely payment form partial again soon...
          -->
          <% if @work_order.payment.paid_on %>
            <label class="control-label">
              <div>PAID:<%= @work_order.payment.paid_on %></div>
            </label>
          <% else %>
            <label class="control-label" for="payment_type">
              <%= t :payment_type, scope: [:activerecord, :models, :work_order] %>
            </label>

            <div class="controls"> 
              <label class="radio inline">
                <%= f.radio_button :user_pays, false, :checked => !@work_order.user_pays %> 
                <span class="icon-envelope-alt icon-large"> <%= t(:invoice, scope: [:views, :work_order, :payment_types]) %></span>
              </label>
              <label class="radio inline">
                <%= f.radio_button :user_pays, true,  :checked => @work_order.user_pays %>
                <span class="icon-user icon-large"> <%= t(:user, scope: [:views, :work_order, :payment_types]) %></span>
              </label>
            </div>
            <br/>
            <%= render 'payments/form', form: f %>          
          <% end %>
        </div>

        <div class="tab-pane" id="sr_memo">
          <%= f.text_area(:memo, rows: 6, class: "span12") %>
        </div>
      </div>
    </div>
  </div>
  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>
<%= javascript_include_tag "work_orders" %>

<script type="text/javascript">
  //  $('#payment_tabs a:first').tab('show')
</script>
<%= render 'clients/add_billing_address' %>
